name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch: {}

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Determine release tag
        id: tag
        run: |
          if [ -n "${GITHUB_REF##refs/tags/}" ]; then
            echo "tag=${GITHUB_REF##refs/tags/}" >> $GITHUB_OUTPUT
          else
            echo "tag=dev-$(date +%Y%m%d%H%M%S)" >> $GITHUB_OUTPUT
          fi

      - name: Set up zip name
        id: name
        run: |
          echo "zipname=starfrontiers.zip" >> $GITHUB_OUTPUT

      - name: Create release package (git-archive)
        run: |
          mkdir -p release
          git archive --format=zip --prefix=starfrontiers/ HEAD -o release/starfrontiers.zip
        shell: bash

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          release_name: ${{ steps.tag.outputs.tag }}
          body: Automated release generated by workflow
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload starfrontiers.zip to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/starfrontiers.zip
          asset_name: starfrontiers.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload system.json manifest to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./system.json
          asset_name: system.json
          asset_content_type: application/json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
