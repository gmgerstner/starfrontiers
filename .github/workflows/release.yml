name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch: {}

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Determine release tag
        id: tag
        run: |
          if [ -n "${GITHUB_REF##refs/tags/}" ]; then
            echo "tag=${GITHUB_REF##refs/tags/}" >> $GITHUB_OUTPUT
          else
            echo "tag=dev-$(date +%Y%m%d%H%M%S)" >> $GITHUB_OUTPUT
          fi

      - name: Set up zip name
        id: name
        run: |
          zipname="${{ steps.tag.outputs.tag }}.zip"
          echo "zipname=$zipname" >> $GITHUB_OUTPUT

      - name: Create release package
        run: |
          mkdir -p release
          # Copy only the system folder files needed for Foundry
          rsync -av --exclude='.git' --exclude='.github' --exclude='node_modules' --exclude='tests' ./ ./release/starfrontiers
          cd release
          zip -r "$ZIPNAME" starfrontiers
        env:
          ZIPNAME: ${{ steps.name.outputs.zipname }}

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          release_name: ${{ steps.tag.outputs.tag }}
          body: Automated release generated by workflow
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload release asset
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload zip to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/${{ steps.name.outputs.zipname }}
          asset_name: ${{ steps.name.outputs.zipname }}
          asset_content_type: application/zip
